local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()
local Window = redzlib:MakeWindow({
  Title = "üåÖ Sunlight Hub xy üåÖ",
  SubTitle = "by Wx, granolakkj",
  SaveFolder = "Sunlight opensrc"
})
     -- Sele√ß√£o de jogador
local selectedPlayerName = nil
local methodKill = "Bus"

local killDropdown = Troll:AddDropdown({
    Name = "Selecionar Jogador",
    Options = getPlayerList(),
    Default = "",
    Callback = function(value)
        selectedPlayerName = value
        getgenv().Target = value
        print("Jogador selecionado: " .. tostring(value))
    end
})

-- Bot√£o para atualizar lista de jogadores
Troll:AddButton({
    Name = "Atualizar Player List",
    Callback = function()
        local tablePlayers = Players:GetPlayers()
        local newPlayers = {}
        if killDropdown and #tablePlayers > 0 then
            for _, player in ipairs(tablePlayers) do
                if player.Name ~= LocalPlayer.Name then
                    table.insert(newPlayers, player.Name)
                end
            end
            killDropdown:Set(newPlayers)
            print("Lista de jogadores atualizada: ", table.concat(newPlayers, ", "))
            if selectedPlayerName and not Players:FindFirstChild(selectedPlayerName) then
                selectedPlayerName = nil
                getgenv().Target = nil
                killDropdown:SetValue("")
                print("Sele√ß√£o resetada, jogador n√£o est√° mais no servidor.")
            end
        else
            print("Erro: Dropdown n√£o encontrado ou nenhum jogador dispon√≠vel.")
        end
    end
})

-- Bot√£o para teleportar at√© o player
Troll:AddButton({
    Name = "Teleportar at√© o Player",
    Callback = function()
        if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
            print("Erro: Player n√£o selecionado ou n√£o existe")
            return
        end
        local character = LocalPlayer.Character
        local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            warn("Erro: HumanoidRootPart do jogador local n√£o encontrado")
            return
        end

        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            humanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame
        else
            print("Erro: Player alvo n√£o encontrado ou sem HumanoidRootPart")
        end
    end
})

-- Toggle para spectar player
Troll:AddToggle({
    Name = "Spectar Player",
    Default = false,
    Callback = function(value)
        local Camera = workspace.CurrentCamera

        local function UpdateCamera()
            if value then
                local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                if targetPlayer and targetPlayer.Character then
                    local humanoid = targetPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    end
                end
            else
                if LocalPlayer.Character then
                    local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                    if humanoid then
                        Camera.CameraSubject = humanoid
                    end
                end
            end
        end

        if value then
            if not getgenv().CameraConnection then
                getgenv().CameraConnection = RunService.Heartbeat:Connect(UpdateCamera)
            end
        else
            if getgenv().CameraConnection then
                getgenv().CameraConnection:Disconnect()
                getgenv().CameraConnection = nil
            end
            UpdateCamera()
        end
    end
})

-- Dropdown de m√©todo (agora Bus e Truck)
Troll:AddDropdown({
    Name = "Selecionar M√©todo para Matar",
    Options = {"Bus", "Truck"},
    Default = "Bus",
    Callback = function(value)
        methodKill = value
        print("M√©todo selecionado: " .. tostring(value))
    end
})

-- Fun√ß√£o para matar com √¥nibus ou caminh√£o
Troll:AddButton({
    Name = "Matar Player",
    Callback = function()
        if not selectedPlayerName or not Players:FindFirstChild(selectedPlayerName) then
            print("Erro: Player n√£o selecionado ou n√£o existe")
            return
        end

        local character = LocalPlayer.Character
        local humanoidRootPart = character and character:FindFirstChild("HumanoidRootPart")
        if not humanoidRootPart then
            warn("Erro: HumanoidRootPart do jogador local n√£o encontrado")
            return
        end

        local originalPosition = humanoidRootPart.CFrame

        local function GetVehicle()
            local vehicles = game.Workspace:FindFirstChild("Vehicles")
            if vehicles then
                return vehicles:FindFirstChild(LocalPlayer.Name .. "Car")
            end
            return nil
        end

        local vehicle = GetVehicle()

        -- Define tipo de ve√≠culo baseado no m√©todo
        local vehicleType = (methodKill == "Truck") and "TowTruck" or "Bus"

        -- Se n√£o existir, spawna ve√≠culo
        if not vehicle then
            humanoidRootPart.CFrame = CFrame.new(1118.81, 75.998, -1138.61)
            task.wait(0.5)
            local remoteEvent = ReplicatedStorage:FindFirstChild("RE")
            if remoteEvent and remoteEvent:FindFirstChild("1Ca1r") then
                remoteEvent["1Ca1r"]:FireServer("PickingCar", vehicleType)
                print("Ve√≠culo spawnado: " .. vehicleType)
            end
            task.wait(1)
            vehicle = GetVehicle()
        end

        if vehicle then
            local seat = vehicle:FindFirstChild("Body") and vehicle.Body:FindFirstChild("VehicleSeat")
            if seat and character:FindFirstChildOfClass("Humanoid") and not character.Humanoid.Sit then
                repeat
                    humanoidRootPart.CFrame = seat.CFrame * CFrame.new(0, 2, 0)
                    task.wait()
                until character.Humanoid.Sit or not vehicle.Parent
                if character.Humanoid.Sit or not vehicle.Parent then
                    for k, v in pairs(vehicle.Body:GetChildren()) do
                        if v:IsA("Seat") then
                            v.CanTouch = false
                        end
                    end
                end
            end
        end

        -- Fun√ß√£o para seguir player
        local function TrackPlayer()
            local timeout = tick() + 15 -- evita loop infinito
            while tick() < timeout do
                if selectedPlayerName then
                    local targetPlayer = Players:FindFirstChild(selectedPlayerName)
                    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                        local targetHumanoid = targetPlayer.Character:FindFirstChildOfClass("Humanoid")
                        if targetHumanoid and targetHumanoid.Sit then
                            if character.Humanoid then
                                vehicle:SetPrimaryPartCFrame(CFrame.new(Vector3.new(9999, -450, 9999)))
                                print("Jogador sentou, levando ve√≠culo para o void!")
                                task.wait(0.2)

                                -- Simula pulo
                                character.Humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
                                print("Simulando pulo!")
                                task.wait(0.5)
                                humanoidRootPart.CFrame = originalPosition
                                print("Player voltou para a posi√ß√£o inicial.")
                            end
                            break
                        else
                            local targetRoot = targetPlayer.Character.HumanoidRootPart
                            local time = tick() * 35
                            local lateralOffset = math.sin(time) * 4
                            local frontBackOffset = math.cos(time) * 20
                            vehicle:SetPrimaryPartCFrame(targetRoot.CFrame * CFrame.new(lateralOffset, 0, frontBackOffset))
                        end
                    end
                end
                RunService.RenderStepped:Wait()
            end
        end

        spawn(TrackPlayer)
    end
})      
